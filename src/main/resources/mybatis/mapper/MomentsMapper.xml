<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bc.wechat.server.mapper.MomentsMapper">

    <resultMap id="moments" type="com.bc.wechat.server.entity.Moments">
        <id column="moments_id" property="momentsId" jdbcType="VARCHAR"/>
        <result column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="content" property="content" jdbcType="VARCHAR"/>
        <result column="thumbnails" property="thumbnails" jdbcType="VARCHAR"/>
        <result column="photos" property="photos" jdbcType="VARCHAR"/>
        <result column="video" property="video" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="VARCHAR"/>
        <result column="timestamp" property="timestamp" jdbcType="BIGINT"/>

        <result column="user_nick_name" property="userNickName" jdbcType="VARCHAR"/>
        <result column="user_avatar" property="userAvatar" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="momentsComment" type="com.bc.wechat.server.entity.MomentsComment">
        <id column="comment_id" property="commentId" jdbcType="VARCHAR"/>
        <result column="moments_id" property="momentsId" jdbcType="VARCHAR"/>
        <result column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="user_nick_name" property="userNickName" jdbcType="VARCHAR"/>
        <result column="reply_to_user_id" property="replyToUserId" jdbcType="VARCHAR"/>
        <result column="reply_to_user_nick_name" property="replyToUserNickName" jdbcType="VARCHAR"/>
        <result column="content" property="content" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="BIGINT"/>
    </resultMap>

    <resultMap id="user" type="com.bc.wechat.server.entity.User">
        <id column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="user_nick_name" property="userNickName" jdbcType="VARCHAR"/>
        <result column="user_avatar" property="userAvatar" jdbcType="VARCHAR"/>
    </resultMap>

    <insert id="addMoments" parameterType="com.bc.wechat.server.entity.Moments">
        insert into t_moments
        (
        moments_id,
        user_id,
        type,
        content,
        thumbnails,
        photos,
        video,
        create_time,
        timestamp
        )
        values
        (
        #{momentsId},
        #{userId},
        #{type},
        #{content},
        #{thumbnails},
        #{photos},
        #{video},
        #{createTime},
        #{timestamp}
        )
    </insert>

    <select id="getFriendMomentsListByUserId" resultMap="moments" parameterType="map">
        <![CDATA[
        select m.*, u.user_nick_name, u.user_avatar
          from t_moments m
            inner join t_user_contact uc on m.user_id = uc.contact_user_id
            left join t_user u on m.user_id = u.user_id
            where uc.user_id = #{userId}
              and m.timestamp < #{timestamp}
              order by m.timestamp desc
              limit #{pageSize}
        ]]>
    </select>

    <select id="getLikeUserListByMomentsId" resultMap="user" parameterType="String">
        select u.*
        from t_moments_like l
        left join t_user u on l.user_id = u.user_id
        where l.moments_id = #{momentsId}
    </select>

    <select id="getLatestMomentsPhotosByUserId" resultType="String" parameterType="String">
        <![CDATA[
        select photos
          from t_moments
          where user_id = #{userId}
            and (photos is not null and photos <> '')
          order by timestamp desc
          limit 0, 4
        ]]>
    </select>

    <insert id="likeMoments" parameterType="map">
        insert into t_moments_like
        (
        like_id,
        moments_id,
        user_id,
        create_time
        )
        values
        (
        #{likeId},
        #{momentsId},
        #{userId},
        now()
        )
    </insert>

    <delete id="unLikeMoments" parameterType="map">
        delete from t_moments_like
        where like_moments_id = #{momentsId}
        and like_user_id = #{userId}
    </delete>

    <select id="getMomentsCommentListByMomentsId" resultMap="momentsComment" parameterType="String">
        select c.*,
        u.user_nick_name as user_nick_name,
        ru.user_nick_name as reply_to_user_nick_name
        from t_moments_comment c
        left join t_user u on c.user_id = u.user_id
        left join t_user ru on c.reply_to_user_id = ru.user_id
        where c.moments_id = #{momentsId}
        order by c.create_time asc
    </select>

    <insert id="addMomentsComment" parameterType="com.bc.wechat.server.entity.MomentsComment">
        insert into t_moments_comment
        (
        comment_id,
        moments_id,
        user_id,
        reply_to_user_id,
        content,
        create_time
        )
        values
        (
        #{commentId},
        #{momentsId},
        #{userId},
        #{replyToUserId},
        #{content},
        now()
        )
    </insert>

    <select id="getMomentsListByPublishUserId" resultMap="moments" parameterType="map">
        <![CDATA[
        select m.*, u.user_nick_name, u.user_avatar
          from t_moments m
            left join t_user u on m.moments_user_id = u.user_id
            where m.moments_user_id = #{userId}
            and m.moments_timestamp < #{timestamp}
            order by m.moments_timestamp desc
            limit #{pageSize}
        ]]>
    </select>

    <delete id="deleteMomentsCommentByCommentId" parameterType="String">
        delete from t_moments_comment
        where comment_id = #{commentId}
    </delete>

</mapper>